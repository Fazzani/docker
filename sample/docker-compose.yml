version: "3"

services:
  redis:
    image: redis:3.2-alpine
    ports:
      - "6379"
    networks:
      - overlayNet
    deploy:
      placement:
        constraints: [node.role == manager]
 
  db:
    image: postgres:9.4
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - overlayNet
    deploy:
      placement:
        constraints: [node.role == manager]
 
  voting-app:
    image: gaiadocker/example-voting-app-vote:good
    ports:
      - 5000:80
    networks:
      - overlayNet
    depends_on:
      - redis
    deploy:
      mode: replicated
      replicas: 2
      labels: [APP=VOTING]
      placement:
        constraints: [node.role == worker]
 
  result-app:
    image: gaiadocker/example-voting-app-result:latest
    ports:
      - 5001:80
    networks:
      - overlayNet
    depends_on:
      - db
  # worker:
  #   image: manomarks/examplevotingapp_worker
  #   networks:
  #     - frontend
  #     - backend
  #   deploy:
  #     mode: replicated
  #     replicas: 2
  #     labels: [APP=VOTING]
  #     restart_policy:
  #       condition: on-failure
  #       delay: 10s
  #       max_attempts: 3
  #       window: 120s
  #     placement:
  #       constraints: [node.role == worker]

  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]
    networks:
      -  overlayNet
  
  registrator:
    image: gliderlabs/registrator:master
    deploy:
      mode: global
    volumes:
      - "/var/run/docker.sock:/tmp/docker.sock"
    command: -internal consul://212.237.52.79:8500

networks:
  overlayNet:
volumes:
  db-data:
