version: "3.3"

services:

  elasticsearch:
    name: synker_elasctic
    command: elasticsearch -Enetwork.host=0.0.0.0 -Ediscovery.zen.ping.unicast.hosts=elasticsearch
    environment:
      ES_JAVA_OPTS: -Xms2g -Xmx2g
    image: elasticsearch:5
    ulimits:
      memlock: -1
      nofile:
        hard: 65536
        soft: 65536
      nproc: 65538
    volumes:
      - /usr/share/elasticsearch/data
    networks:
      - elk
    deploy:
      mode: replicated
      replicas: 1
      endpoint_mode: dnsrr
      placement:
        constraints: 
          - node.labels.size == large
  kibana:
    name: synker_kibana
    image: kibana:latest
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
    networks:
      - elk
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: 
          - node.role == worker
          - node.labels.size == medium
    healthcheck:
      test: wget -qO- http://localhost:5601 > /dev/null
      interval: 30s
      retries: 3

  logstash:
    name: synker_logstash
    hostname: logstash
    command: sh -c "logstash -e 'input { syslog  { type => syslog port => 10514   } gelf { } } output { stdout { codec => rubydebug } elasticsearch { hosts => [ \"elasticsearch\" ] } }'"
    image: logstash:alpine
    ports:
        - "10514:10514/tcp"
        - "10514:10514/udp"
        - "12201:12201/udp"
    networks:
      - elk
    deploy:
      mode: replicated
      replicas: 2
      placement:
        constraints: 
          - node.labels.provider == ovh

  visualizer:
    name: visu
    image: dockersamples/visualizer:stable
    ports:
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]
    networks:
      - elk

networks:
  elk:
    driver: overlay
    driver_opts:
      encrypted: "true"